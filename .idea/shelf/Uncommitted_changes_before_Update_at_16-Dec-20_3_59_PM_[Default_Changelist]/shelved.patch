Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.masterandroid.backgroundservice\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\">\r\n        <activity android:name=\".showPlaceNearby\"></activity>\r\n        <activity android:name=\".createAccount\" />\r\n        <activity android:name=\".login\">\r\n\r\n        </activity>\r\n        <activity android:name=\".ViewHistoryRecycler\" />\r\n        <activity android:name=\".MainActivity\">\r\n\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n\r\n        </activity>\r\n\r\n        <service\r\n            android:name=\".LocationService\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"false\" />\r\n    </application>\r\n\r\n    <uses-feature android:name=\"android.hardware.location.gps\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision bbdacc6c14e491b8094b3f8c1d437829bc778d0d)
+++ app/src/main/AndroidManifest.xml	(date 1608114355269)
@@ -35,7 +35,7 @@
     <uses-feature android:name="android.hardware.location.gps" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
     <uses-permission android:name="android.permission.INTERNET" />
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/masterandroid/backgroundservice/ViewHistoryRecycler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.masterandroid.backgroundservice;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.masterandroid.backgroundservice.adapter.MainAdapter;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\npublic class ViewHistoryRecycler extends AppCompatActivity {\r\n    private FirebaseAuth mAuth;\r\n    private static final int CODE_GET_REQUEST = 1024;\r\n    private static final int CODE_POST_REQUEST = 1025;\r\n    RecyclerView historyRecycler;\r\n    Button refresh_history;\r\n    List<place> historyList;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        mAuth=FirebaseAuth.getInstance();\r\n        FirebaseUser currentUser= mAuth.getCurrentUser();\r\n        setContentView(R.layout.activity_view_history_recycler);\r\n        historyRecycler=findViewById(R.id.historyRecycler);\r\n        historyRecycler.setLayoutManager(new LinearLayoutManager(this));\r\n        refresh_history=findViewById(R.id.refresh_history);\r\n        historyList=new ArrayList<>();\r\n\r\n        refresh_history.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                readHistory(\"GuzFS0EjtBSwuRXBuRfhFN8ZSfm1\");\r\n            }\r\n        });\r\n    }\r\n    private void readHistory(String userId) {\r\n        PerformNetworkRequest request = new PerformNetworkRequest(Api.URL_READ_LIST+userId, null, CODE_GET_REQUEST);\r\n        request.execute();\r\n    }\r\n\r\n    private void refreshHistoryList(JSONArray heroes) throws JSONException {\r\n        //clearing previous heroes\r\n       // historyList.clear();\r\n\r\n        //traversing through all the items in the json array\r\n        //the json we got from the response\r\n        for (int i = 0; i < heroes.length(); i++) {\r\n            //getting each hero object\r\n            JSONObject obj = heroes.getJSONObject(i);\r\n\r\n            //adding the hero to the list\r\n            String type= obj.getString(\"placeType\");\r\n            String str[] = type.split(\",\");\r\n            ArrayList<String> placeType = new ArrayList<String>(Arrays.asList(str));\r\n            place p=new place(\r\n                    obj.getInt(\"placeId\"),\r\n                    obj.getString(\"userId\"),\r\n                    obj.getDouble(\"placeLongitude\"),\r\n                    obj.getDouble(\"placeLatitude\"),\r\n                    obj.getString(\"placeAddress\"),\r\n                    obj.getString(\"placeName\"),\r\n                    placeType,\r\n                    obj.getString(\"visitStatus\")\r\n                    );\r\n            Log.d(\"place\",p.toString());\r\n            if(historyList.contains(p.getPlaceName()))\r\n            {\r\n\r\n            }else\r\n                {\r\n                    historyList.add(p);\r\n                }\r\n            //creating the adapter and setting it to the recyclerview\r\n        }\r\n\r\n        Log.d(\"List Size \",Integer.toString(historyList.size()));\r\n        MainAdapter adapter = new MainAdapter(historyList,ViewHistoryRecycler.this);\r\n        historyRecycler.setAdapter(adapter);\r\n    }\r\n\r\n\r\n    private class PerformNetworkRequest extends AsyncTask<Void, Void, String> {\r\n\r\n        //the url where we need to send the request\r\n        String url;\r\n        //the parameters\r\n        HashMap<String, String> params;\r\n        //the request code to define whether it is a GET or POST\r\n        int requestCode;\r\n\r\n        //constructor to initialize values\r\n        PerformNetworkRequest(String url, HashMap<String, String> params, int requestCode) {\r\n            this.url = url;\r\n            this.params = params;\r\n            this.requestCode = requestCode;\r\n        }\r\n\r\n        //when the task started displaying a progressbar\r\n        @Override\r\n        protected void onPreExecute() {\r\n            super.onPreExecute();\r\n        }\r\n\r\n\r\n        //this method will give the response from the request\r\n        @Override\r\n        protected void onPostExecute(String s) {\r\n            super.onPostExecute(s);\r\n            try {\r\n                JSONObject object = new JSONObject(s);\r\n                if (!object.getBoolean(\"error\")) {\r\n                    Toast.makeText(getApplicationContext(), object.getString(\"message\"), Toast.LENGTH_SHORT).show();\r\n                    //refreshing the herolist after every operation\r\n                    //so we get an updated list\r\n                    //we will create this method right now it is commented\r\n                    //because we haven't created it yet\r\n                    refreshHistoryList(object.getJSONArray(\"lists\"));\r\n                }\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        //the network operation will be performed in background\r\n        @Override\r\n        protected String doInBackground(Void... voids) {\r\n            RequestHandler requestHandler = new RequestHandler();\r\n\r\n            if (requestCode == CODE_POST_REQUEST)\r\n                return requestHandler.sendPostRequest(url, params);\r\n\r\n            if (requestCode == CODE_GET_REQUEST)\r\n                return requestHandler.sendGetRequest(url);\r\n\r\n            return null;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/masterandroid/backgroundservice/ViewHistoryRecycler.java	(revision bbdacc6c14e491b8094b3f8c1d437829bc778d0d)
+++ app/src/main/java/com/masterandroid/backgroundservice/ViewHistoryRecycler.java	(date 1608113353616)
@@ -56,7 +56,7 @@
 
     private void refreshHistoryList(JSONArray heroes) throws JSONException {
         //clearing previous heroes
-       // historyList.clear();
+       historyList.clear();
 
         //traversing through all the items in the json array
         //the json we got from the response
